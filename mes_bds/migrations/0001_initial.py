# Generated by Django 5.2 on 2025-08-27 10:30

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('time_updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('name', models.CharField(max_length=255, verbose_name="Nom de l'artiste")),
            ],
            options={
                'verbose_name_plural': 'Artistes',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('time_updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('name', models.CharField(max_length=255, verbose_name="Nom de l'auteur")),
            ],
            options={
                'verbose_name_plural': 'Auteurs',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('time_updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('name', models.CharField(max_length=255, verbose_name="Nom de l'éditeur")),
            ],
            options={
                'verbose_name_plural': 'Editeurs',
            },
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('time_updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('title', models.CharField(max_length=255, verbose_name='Nom de la série')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name_plural': 'Séries',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('time_updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('title', models.CharField(max_length=128)),
                ('ISBN_10', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.MinLengthValidator(10)], verbose_name='ISBN-10')),
                ('ISBN_13', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.MinLengthValidator(13)], verbose_name='ISBN-13')),
                ('number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Numéro')),
                ('book_type', models.CharField(choices=[('BD', 'Bande dessinée'), ('MA', 'Manga'), ('RO', 'Roman'), ('LJ', 'Livre jeunesse'), ('LP', 'Livre pratique'), ('LD', 'Livre documentaire'), ('MS', 'Manuel scolaire'), ('RP', 'Recueil poésie'), ('PT', 'Pièce de théâtre'), ('ES', 'Essai'), ('BI', 'Biographie'), ('AU', 'Autobiographie'), ('LA', "Livre d'art")], default='BD', max_length=2)),
                ('description', models.TextField(blank=True, null=True)),
                ('cover_ID', models.CharField(max_length=20, null=True, verbose_name='ID de couverture')),
                ('artist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to='mes_bds.artist', verbose_name='Artiste')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to='mes_bds.author', verbose_name='Auteur')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to='mes_bds.publisher', verbose_name='Editeur')),
                ('serie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to='mes_bds.serie', verbose_name='Série')),
            ],
            options={
                'verbose_name_plural': 'Livres',
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('time_updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('family_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_member', to=settings.AUTH_USER_MODEL, verbose_name='Membre de la famille')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_maker', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name_plural': 'Membres de la famille',
                'constraints': [models.UniqueConstraint(fields=('user', 'family_member'), name='unique_user_user'), models.CheckConstraint(condition=models.Q(('user', models.F('family_member')), _negated=True), name='user_not_equal_to_family_member')],
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('time_updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('book_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book', to='mes_bds.book', verbose_name='Livre')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Owner', to=settings.AUTH_USER_MODEL, verbose_name='Proprietaire')),
            ],
            options={
                'verbose_name_plural': 'Bibliothèques',
                'constraints': [models.UniqueConstraint(fields=('user', 'book_list'), name='unique_user_book')],
            },
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['book_type'], name='mes_bds_boo_book_ty_db20e1_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['title'], name='mes_bds_boo_title_37c128_idx'),
        ),
    ]
